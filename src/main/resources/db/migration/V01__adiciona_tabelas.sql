CREATE TABLE IF NOT EXISTS funcionalidade (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    funcionalidade VARCHAR(60) NOT NULL,
    endpoint VARCHAR(100) NOT NULL,
    http_method VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS funcao (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    CONSTRAINT uk_funcao_nome UNIQUE (nome)
);

CREATE TABLE IF NOT EXISTS funcao_funcionalidade (
    funcao_id BIGINT NOT NULL,
    funcionalidade_id BIGINT NOT NULL,
    PRIMARY KEY (funcao_id, funcionalidade_id),
    CONSTRAINT fk_funcao_funcionalidade_funcao FOREIGN KEY (funcao_id) REFERENCES funcao (id) ON DELETE CASCADE,
    CONSTRAINT fk_funcao_funcionalidade_funcionalidade FOREIGN KEY (funcionalidade_id) REFERENCES funcionalidade (id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS usuario (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    senha VARCHAR(255) NOT NULL,
    ativo BOOLEAN,
    data_criacao TIMESTAMP,
    data_alteracao TIMESTAMP,
    administrador_id BIGINT,
    CONSTRAINT uk_usuario_email UNIQUE (email),
    FOREIGN KEY (administrador_id) REFERENCES usuario(id)
);

CREATE TABLE IF NOT EXISTS usuario_funcao (
    usuario_id BIGINT NOT NULL,
    funcao_id BIGINT NOT NULL,
    PRIMARY KEY (usuario_id, funcao_id),
    FOREIGN KEY (usuario_id) REFERENCES usuario(id) ON DELETE CASCADE,
    FOREIGN KEY (funcao_id) REFERENCES funcao(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS categoria_item (
    id BIGSERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS localizacao (
    id BIGSERIAL PRIMARY KEY,
    andar VARCHAR(50) NOT NULL,
    nome_sala VARCHAR(100) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS status_item (
    id BIGSERIAL PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS tipo_entrada (
    id BIGSERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS item (
    id BIGSERIAL PRIMARY KEY,
    nome_item VARCHAR(200) NOT NULL,
    descricao_curta TEXT,
    descricao_detalhada TEXT,
    numero_serie VARCHAR(100),
    codigo_item VARCHAR(100) UNIQUE,
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data_alteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    categoria_item_id BIGINT REFERENCES categoria_item(id),
    localizacao_id BIGINT REFERENCES localizacao(id),
    status_item_id BIGINT REFERENCES status_item(id),
    tipo_entrada_id BIGINT REFERENCES tipo_entrada(id),
    nota_fiscal VARCHAR(150)
);
